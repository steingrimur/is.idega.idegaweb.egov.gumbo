<?xml version="1.0" encoding="UTF-8"?>

<process-definition
  xmlns=""  name="ViolationReport">
  
  <event type="process-start">
         <script>
            <expression>
                String handlerRoleName = "bpm_violationReport_handler";
                String ownerRoleName = "bpm_violationReport_owner";
                String superHandlerRoleName = "bpm_violationReport_superHandler";
                
                mainProcessInstanceId = executionContext.getProcessInstance().getId();
            </expression>
            <variable name='handlerRoleName' access='write' />
            <variable name='superHandlerRoleName' access='write' />
            <variable name='ownerRoleName' access='write' />
            
            <variable name='mainProcessInstanceId' access='write' />
         </script>
  </event>
  <event type="process-start">
    <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>rolesAssignmentHandler</handlerName>
                    <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                        <entry>
                            <key>assignmentExpression</key>
                            <value>
                               ${
                               String handlerRoleName = resolver.get("handlerRoleName");
                               String handlerNativeRoleName = handlerRoleName;
                               
                               return
                               "{rolesAssignment: {roles: {role: ["+
                               "     {roleName: \""+handlerRoleName+"\", identities: {identity: [{identityType: ROLE, identityId: \""+handlerNativeRoleName+"\"}]}}"+
                               " ]} }}";
                               }
                            </value>
                    </entry>
                </propertyMap>
        </action>
  </event>
  <event type="process-start">
        <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>rightsManagementRolesAssignmentHandler</handlerName>
                <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                    <entry>
                        <key>assignmentExpression</key>
                        <value>
                        {rightsAssignment: {roles: {role: [
                            {roleName: "bpm_violationReport_handler", accesses: {access: [modifyPermissions, caseHandler]}},
                            {roleName: "bpm_violationReport_handler", accesses: {access: [seeContacts]}, rolesContacts: {string: ["all"]}}
                        ]} }}
                        </value>
                </entry>
            </propertyMap>
        </action>
    </event>
  
   <start-state name="violationReport">
     <task name="violationReportTask">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
			<handlerName>jsonAssignmentHandler</handlerName>
			<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
				<entry><key>expression</key>
					<value>
		                {taskAssignment: {roles: {role: [
		                   {roleName: "bpm_violationReport_handler", accesses: {access: [read]}},
		                   {roleName: "bpm_violationReport_owner", accesses: {access: [read, write]}, assignIdentities: {string: ["current_user"]}}
		                ]} }}
            		</value>
				</entry>
			</propertyMap>
		 </assignment>
         
         <controller>
            <variable name="string_caseIdentifier" access="read"></variable>
            <variable name="string_caseDescription" access="read,write"></variable>
            
            <variable name="objlist_violationPersons" access="read,write"></variable>
            <variable name="objlist_violationCompanies" access="read,write"></variable>
            
            <variable name="date_violationDate" access="read,write"></variable>
            <variable name="string_violationDateLabel" access="read,write"></variable>
            <variable name="string_violationTime" access="read,write"></variable>
            <variable name="string_violationTimeLabel" access="read,write"></variable>
            <variable name="list_violationTypes" access="read,write"></variable>
            <variable name="string_violationTypesSummary" access="read,write"></variable>
            
            <variable name="string_locationLatitudeDegree" access="read,write"></variable>
            <variable name="string_locationLatitudeMinute" access="read,write"></variable>
            <variable name="string_locationLatitudeSecond" access="read,write"></variable>
            <variable name="string_locationLatitudePole" access="read,write"></variable>
            
            <variable name="string_locationLatitudeLabel" access="read,write"></variable>
            
            <variable name="string_locationLongitudeDegree" access="read,write"></variable>
            <variable name="string_locationLongitudeMinute" access="read,write"></variable>
            <variable name="string_locationLongitudeSecond" access="read,write"></variable>
            <variable name="string_locationLongitudeAngle" access="read,write"></variable>
            
            <variable name="string_locationLongitudeLabel" access="read,write"></variable>
            
            <variable name="string_harbourNr" access="read,write"></variable>
            <variable name="string_harbourName" access="read,write"></variable>
            <variable name="string_harbourLabel" access="read,write"></variable>
            <variable name="string_violationAddress" access="read,write"></variable>
            <variable name="string_violationPostalCode" access="read,write"></variable>
            <variable name="string_violationPlace" access="read,write"></variable>
            <variable name="string_violationUmBorSkipi" access="read,write"></variable>
            <variable name="string_violationUmBorSkipiLabel" access="read,write"></variable>
            <variable name="string_officerComments" access="read,write"></variable>
            
            <variable name="string_vesselRegistryNr" access="read,write"></variable>
            <variable name="string_vesselName" access="read,write"></variable>
            <variable name="string_vesselOwnerName" access="read,write"></variable>
            <variable name="string_vesselFishingType" access="read,write"></variable>
            <variable name="string_vesselFishingLicense" access="read,write"></variable>
            <variable name="string_vesselFishingGear" access="read,write"></variable>
            <variable name="string_vesselFishingGearOther" access="read,write"></variable>
            <variable name="string_vesselFishingGearsSummary" access="read,write"></variable>
            <variable name="string_vesselRevokeLicense" access="read,write"></variable>
            <variable name="string_vesselFisheriesName" access="read,write"></variable>
            
            <variable name="string_policeInvolvement" access="read,write"></variable>
            <variable name="string_policeOfficersNr" access="read,write"></variable>
            <variable name="string_violationDescription" access="read,write"></variable>
            <variable name="files_attachments" access="read,write"></variable>
            <variable name="string_attachmentDescription" access="read,write"></variable>
            <variable name="string_responsibleInspector" access="read,write"></variable>
            <variable name="string_fiskistofaOffice" access="read,write"></variable>
            <variable name="string_fiskistofaOfficeLabel" access="read,write"></variable>
            <variable name="list_otherInspectors" access="read,write"></variable>
            <variable name="string_otherInspectorsSummary" access="read,write"></variable>
            
         </controller>
      </task>
      <event type="node-leave">
			<action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            	<handlerName>setProcessDescriptionHandler</handlerName>
          	</action>
      </event>
      <transition to="fork1"></transition>
   </start-state>
   <event type="handlerAssignedToCase">
         <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>caseHandlerAssignmentHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
			        <entry>
			        	<key>inlineSubject</key>
			        	<value>
			       			${
			        		Map subjectMap = new HashMap();
			        		subjectMap.put("en", "Handler was assigned to the case");
			        		subjectMap.put("is_IS", "Mál ({0}, {1}) í flokknum {2} ");
			        		return subjectMap;
			        		}
			        		
                		</value>
                	</entry>
                	<entry>
			        	<key>inlineMessage</key>
			        	<value>
			        	${
			        		Map messageMap = new HashMap();
			        		messageMap.put("en", "Hi, {0}.\n Handler {1} was assigned to the case {2} with identifier {3} and description {4}");
			        		messageMap.put("is_IS", "Sæl/ll, {0}.\n{1} hefur tekið að sér málið með nafnið : {4} ({3}) í flokknum : {2}.");
			        		return messageMap;
			        		}
                		</value>
                	</entry>
                		<entry>
                        <key>subjectValues</key>
                        <value>
                            {list: {mv: [{type: "bean", value: "piw.processDescription"}, {type: "bean", value: "piw.processIdentifier"},{type: "bean", value: "piw.processDefinitionW.startTaskName"}]}}
                        </value>
                    </entry>
                	<entry>
			        	<key>messageValues</key>
			        	<value>
			        		{list: {mv: [{type: "bean", value: "user.name"}, {type: "roleUsers", value: "{role: {roleName: \"bpm_violationReport_caseHandler\"}}"}, {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}]}}
                		</value>
                	</entry>
                	<entry><key>sendToRoles</key><value>bpm_violationReport_owner bpm_violationReport_handler</value></entry>
			    </propertyMap>
			</action>
    </event>
    <event type="handlerUnassignedFromCase">
		<action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>caseHandlerAssignmentHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
			      	<entry><key>caseHandlerRoleExp</key><value>{role: {roleName: "bpm_violationReport_caseHandler"}}</value></entry>
			        <entry>
			        	<key>inlineSubject</key>
			        	<value>
			        		${
			        		Map subjectMap = new HashMap();
			        		subjectMap.put("en", "Handler was unassigned from the case");
			        		subjectMap.put("is_IS", "Umsjónarmannaskipti á máli ({0}, {1})");
			        		return subjectMap;
			        		}
			        		
                		</value>
                	</entry>
                	<entry>
			        	<key>inlineMessage</key>
			        	<value>
			        		${
			        		Map messageMap = new HashMap();
			        		messageMap.put("en", "Hi, {0}.\n Handler was unassigned from the case {1} with identifier {2} and description {3}");
			        		messageMap.put("is_IS", "Sæl/ll, {0}.\nUmsjónarmannaskipti hafa átt sér stað fyrir málið með nafnið: {3} ({2}) í flokknum {1}.");
			        		return messageMap;
			        		}
                		</value>
                	</entry>
                	 	<entry>
                        <key>subjectValues</key>
                        <value>
                            {list: {mv: [{type: "bean", value: "piw.processDescription"}, {type: "bean", value: "piw.processIdentifier"}]}}
                        </value>
                    </entry>
                	<entry>
			        	<key>messageValues</key>
			        	<value>
			        		{list: {mv: [{type: "bean", value: "user.name"}, {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}]}}
                		</value>
                	</entry>
                	<entry><key>sendToRoles</key><value>bpm_violationReport_handler</value></entry>
			    </propertyMap>
		</action>
    </event>
   <task-node name="setTimeframe">
    <task name="setTimeframeTask" priority="-1">
         <controller>
            <variable name="date_timeframeDate" access="read,write"></variable>
         </controller>
        <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
      
      </task>
		<transition to="killOldTimerAndTurnNewOn"></transition>
	</task-node>

	<fork name="fork1">
		<transition to="setTimeframe" name="toSetTimeframe"></transition>
		<transition to="sendToLegalDepartment" name="toSendToLegalDepartment"></transition>
		<transition to="violationDecision" name="toViolationDecision"></transition>
		<transition to="closeCase" name="toCloseCase"></transition>
		<transition to="writeLetter" name="toWriteLetter"></transition>
		<transition to="addAttachment" name="toAddAttachment"></transition>
		<transition to="inviteParticipant" name="toInviteParticipant"></transition>
		<transition to="requestAdditionalInformation" name="toRequestAdditionalInformation"></transition>
		<transition to="submitAdditionalInformationWithoutRequest" name="toSubmitAdditionalInformationWithoutRequest"></transition>
		<transition to="violationReportOnRepeat" name="toViolationReportOnRepeat"></transition>
	</fork>

	<task-node name="sendToLegalDepartment">
	   <task name="sendToLegalDepartmentTask" priority="-1">
         <controller>
            <variable name="string_additionalInformationRequestText" access="write"></variable>
            <variable name="string_lawyerUserId" access="write,required"></variable>
         </controller>
        <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
      
      </task>
		<transition to="assignHandler"></transition>
	</task-node>

	<task-node name="requestAdditionalInformation">
	   <task name="requestAdditionalInformationTask" priority="-1">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
         
         <controller>
            <variable name="string_additionalInformationRequestText" access="write,required"></variable>
            <variable name="files_additionalAttachments" access="write"></variable>
         </controller>
      </task>
	  <transition to="sendMessage"></transition>
	</task-node>

	<task-node name="inviteParticipant">
	   <task name="inviteParticipantTask" priority="-1">
         <controller>
            <variable name="string_inviteText" access="write,required"></variable>
            <variable name="string_participantEmailBySuperHandler" access="read,write"></variable>
            <variable name="string_participantEmailByHandler" access="read,write"></variable>
            <variable name="string_participantName" access="write,required"></variable>
            <variable access="write" name="files_inviteParticipantAttachments"></variable>
                
            <variable name="string_showSuperHandlerSection" access="read,write,required"></variable>
            
            <variable name="superHandlerRoleName" access="read"></variable>
            
         </controller>
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}},
                           {roleName: "bpm_violationReport_superHandler", accesses: {access: [read, write]}},
                           {roleName: "bpm_violationReport_owner", accesses: {access: [read]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
      </task>
      <event type="node-leave">
         <script>
            <expression>
                String participantEmail;
                
                if(participantEmailBySuperHandler != null &amp;&amp; !participantEmailBySuperHandler.equals("")) {
                    participantEmail = participantEmailBySuperHandler;
                } else {
                    participantEmail = participantEmailByHandler;
                }
                
            </expression>
            <variable name='string_participantEmailBySuperHandler' access='read' mapped-name='participantEmailBySuperHandler' />
            <variable name='string_participantEmailByHandler' access='read' mapped-name='participantEmailByHandler' />
            <variable name='string_participantEmail' access='write' mapped-name='participantEmail' />
         </script>
      </event>
		<transition to="inviteParticipantProcess"></transition>
	</task-node>

	<task-node name="writeLetter">
	   <task name="writeLetterTask" priority="-1">
         <controller>
            <variable name="string_letterText" access="read,write,required"></variable>
            
            <variable name="string_recipientSocialNr" access="read,write,required"></variable>
            <variable name="string_recipientName" access="read,write"></variable>
            <variable name="string_recipientAddress" access="read,write"></variable>
            <variable name="string_recipientPostalCode" access="read,write"></variable>
            <variable name="string_recipientEmail" access="read,write"></variable>
         </controller>
        <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
      
      </task>
		<transition to="generateAndAttachLetterPDF"></transition>
	</task-node>

	<task-node name="violationDecision">
	   <task name="violationDecisionTask" priority="-1">
         <controller>
            <variable name="string_rulingText" access="read,write,required"></variable>
            <variable name="files_processRullingAttachments" access="read,write"></variable>
         </controller>
        <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
      
      </task>
		<transition to="setCaseStatusToReady"></transition>
	</task-node>

	<task-node name="closeCase">
	   <task name="closeCaseTask">
         <controller>
         </controller>
        <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
      
      </task>
		<transition to="setCaseStatusToClosed"></transition>
	</task-node>

	<process-state name="addAttachment">
		<sub-process name="addAttachments" binding="late" />
        <variable name="string_addAttachmentAssignmentExpression" access="read" />
        <variable name='mainProcessInstanceId' access='read' />
        <event type="node-enter">
         <script>
            <expression>
                addAttachmentAssignmentExpression = 
                       "{taskAssignment: {roles: {role: ["
                       +"{roleName: \"bpm_violationReport_handler\", accesses: {access: [read,write]}}"
                       +"]} }}";
            </expression>
            <variable name='string_addAttachmentAssignmentExpression' access='write' mapped-name='addAttachmentAssignmentExpression' />
         </script>
        </event>
		<transition to="end-state1"></transition>
	</process-state>

	<process-state name="inviteParticipantProcess">
      <sub-process name="participantInvitation" binding="late" />
      
      <variable name='mainProcessInstanceId' access='read' />
      <variable name="participantInviteUserPersonalData" access="read" mapped-name="participantUserData" />
      <variable name="participantInviteRoleExp" access="read" mapped-name="participantRoleExpression" />
      <variable name="participantInviteMsg" access="read" mapped-name="participantInvitationMessage" />
      
      <event type="node-enter">
         <script>
            <expression>
                s_upd = new com.idega.jbpm.identity.UserPersonalData();
                s_upd.setUserEmail(userEmail);
                s_upd.setFullName(userFullName);
                s_upd.setUserType("BPM_USER_LEGAL");
                
                s_roleExp = "{role: {roleName: \""+invitedRoleName+"\"}}";
                
                s_msg = new com.idega.bpm.process.invitation.Message();
                s_msg.setText(msgText);
            </expression>
            <variable name='string_participantEmail' access='read' mapped-name='userEmail' />
            <variable name='string_participantName' access='read' mapped-name='userFullName' />
            <variable name='string_inviteText' access='read' mapped-name='msgText' />
            <variable name='participantInviteUserPersonalData' access='write' mapped-name='s_upd' />
            <variable name='participantInviteRoleExp' access='write' mapped-name='s_roleExp' />
            <variable name='participantInviteMsg' access='write' mapped-name='s_msg' />
            
            <variable name='invitedRoleName' access='read' />
         </script>
      </event>
      
		<transition to="submitCaseAnswer"></transition>
	</process-state>

	<task-node name="submitCaseAnswer">
	   <task name="submitCaseAnswerTask">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read]}},
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
         
         <controller>
            <variable name="string_ownerCaseInformation" access="read"></variable>
            <variable name="string_participantCaseAnswer" access="write,required"></variable>
            <variable name="files_participantAttachments" access="write"></variable>
         </controller>
      </task>
		<transition to="end-state1"></transition>
	</task-node>

	<node name="sendMessage">
	   <event type="node-enter">
         <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
                <handlerName>sendCaseMessagesHandler</handlerName>
                <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                    
                    <entry>
                        <key>inlineSubject</key>
                        <value>
                            ${
                            Map subjectMap = new HashMap();
                            subjectMap.put("en", "Additional information needed");
                            subjectMap.put("is_IS", "Additional information needed");
                            return subjectMap;
                            }
                            
                        </value>
                    </entry>
                    <entry>
                        <key>inlineMessage</key>
                        <value>
                            ${
                            Map messageMap = new HashMap();
                            messageMap.put("en", "Hello, {0}.\n There is a new form for you to supply additional information in the case {1} with identifier {2} and description {3}.");
                            messageMap.put("is_IS", "Hello, {0}.\n There is a new form for you to supply additional information in the case {1} with identifier {2} and description {3}.");
                            return messageMap;
                            }
                        </value>
                    </entry>
                    <entry>
                        <key>subjectValues</key>
                        <value>
                            {list: {mv: [{type: "bean", value: "piw.processDescription"}, {type: "bean", value: "piw.processIdentifier"}]}}
                        </value>
                    </entry>
                    <entry>
                        <key>messageValues</key>
                        <value>
                            {list: {mv: [{type: "bean", value: "user.name"},  {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"},{type: "bean", value: "caseUser.urlToTheCase"}]}}
                        </value>
                    </entry>
                    <entry><key>sendToRoles</key><value>bpm_violationReport_owner</value></entry>
                </propertyMap>
        </action>
      
      </event>
		<transition to="submitAdditionalInformation"></transition>
	</node>

	<task-node name="submitAdditionalInformation">
	   <task name="submitAdditionalInformationTask">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read]}},
                           {roleName: "bpm_violationReport_owner", accesses: {access: [read, write]}} 
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
         <controller>
            <variable name="string_additionalInformationRequestText" access="read"></variable>
            <variable name="string_additionalInformation" access="write,required"></variable>
            <variable name="files_additionalAttachments" access="write"></variable>
         </controller>
      </task>
		<transition to="end-state1"></transition>
	</task-node>

	<node name="setCaseStatusToClosed">
	   <event type="node-enter">
        <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>casesStatusHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                    <entry><key>caseStatusMappedName</key><value>caseStatusClosed</value></entry>
                    <entry><key>processInstanceId</key><value>#{mainProcessInstanceId}</value></entry>
            </propertyMap>
        </action>
       </event>
	   <transition to="end-process"></transition>
	</node>

	<node name="setCaseStatusToReady">
	   <event type="node-enter">
        <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>casesStatusHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                    <entry><key>caseStatusMappedName</key><value>caseStatusReady</value></entry>
                    <entry><key>processInstanceId</key><value>#{mainProcessInstanceId}</value></entry>
            </propertyMap>
        </action>
       </event>
		<transition to="sendNotificationsToHandlers"></transition>
	</node>

	<node name="sendNotificationsToHandlers">
	   <event type="node-enter">
         <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
                <handlerName>sendCaseMessagesHandler</handlerName>
                <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                    
                    <entry>
                        <key>inlineSubject</key>
                        <value>
                            ${
                            Map subjectMap = new HashMap();
                            subjectMap.put("en", "Violation decision has been submitted");
                            subjectMap.put("is_IS", "Violation decision has been submitted");
                            return subjectMap;
                            }
                            
                        </value>
                    </entry>
                    <entry>
                        <key>inlineMessage</key>
                        <value>
                            ${
                            Map messageMap = new HashMap();
                            messageMap.put("en", "Violation decision has been submitted");
                            messageMap.put("is_IS", "Violation decision has been submitted");
                            return messageMap;
                            }
                        </value>
                    </entry>
                    <entry><key>sendToRoles</key><value>bpm_violationReport_handler</value></entry>
                </propertyMap>
        </action>
      
      </event>
		<transition to="end-state1"></transition>
	</node>

	<node name="assignHandler">
	   <event type="node-enter">
        <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
                <handlerName>caseHandlerAssignmentHandler</handlerName>
                <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>caseHandlerRoleExp</key><value>{role: {roleName: "bpm_violationReport_caseHandler"}}</value></entry>
                    <entry>
                        <key>inlineSubject</key>
                        <value>
                            ${
                            Map subjectMap = new HashMap();
                            subjectMap.put("en", "Handler was assigned to the case");
                            subjectMap.put("is_IS", "Handler was assigned to the case");
                            return subjectMap;
                            }
                            
                        </value>
                    </entry>
                    <entry>
                        <key>inlineMessage</key>
                        <value>
                            ${
                            Map messageMap = new HashMap();
                            messageMap.put("en", "Hi, {0}.\n Handler {1} was assigned to the case {2} with identifier {3} and description {4}");
                            messageMap.put("is_IS", "Hi, {0}.\n Handler {1} was assigned to the case {2} with identifier {3} and description {4}");
                            return messageMap;
                            }
                        </value>
                    </entry>
                    <entry>
                        <key>subjectValues</key>
                        <value>
                            {list: {mv: [{type: "bean", value: "piw.processDescription"}, {type: "bean", value: "piw.processIdentifier"},{type: "bean", value: "piw.processDefinitionW.startTaskName"}]}}
                        </value>
                    </entry>
                    <entry>
                        <key>messageValues</key>
                        <value>
                            {list: {mv: [{type: "bean", value: "user.name"}, {type: "roleUsers", value: "{role: {roleName: \"bpm_violationReport_caseHandler\"}}"},  {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}]}}
                        </value>
                    </entry>
                <entry><key>sendToRoles</key><value>bpm_violationReport_handler</value></entry>
                <entry><key>handlerUserId</key><value>#{string_lawyerUserId}</value></entry>
                </propertyMap>
         </action>
    </event>
		<transition to="end-state1"></transition>
	</node>

	<node name="generateAndAttachLetterPDF">
		<transition to="end-state1"></transition>
	</node>

	<node name="notifyAboutTheTimeframeMet">
		<event type="node-enter">
	         <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
	                <handlerName>sendCaseMessagesHandler</handlerName>
	                <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
	                    
	                    <entry>
	                        <key>inlineSubject</key>
	                        <value>
	                            ${
	                            Map subjectMap = new HashMap();
	                            subjectMap.put("en", "Reminder for the unhandled case");
	                            subjectMap.put("is_IS", "Reminder for the unhandled case");
	                            return subjectMap;
	                            }
	                            
	                        </value>
	                    </entry>
	                    <entry>
	                        <key>inlineMessage</key>
	                        <value>
	                            ${
	                            Map messageMap = new HashMap();
	                            messageMap.put("en", "Hello, {0}.\n There is the unhandled case you could take a look into. Case is {1} with identifier {2} and description {3}.");
	                            messageMap.put("is_IS", "Hello, {0}.\n There is the unhandled case you could take a look into. Case is {1} with identifier {2} and description {3}.");
	                            return messageMap;
	                            }
	                        </value>
	                    </entry>
	                    <entry>
	                        <key>subjectValues</key>
	                        <value>
	                            {list: {mv: [{type: "bean", value: "piw.processDescription"}, {type: "bean", value: "piw.processIdentifier"}]}}
	                        </value>
	                    </entry>
	                    <entry>
	                        <key>messageValues</key>
	                        <value>
	                            {list: {mv: [{type: "bean", value: "user.name"},  {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"},{type: "bean", value: "caseUser.urlToTheCase"}]}}
	                        </value>
	                    </entry>
	                    <entry><key>sendToRoles</key><value>bpm_violationReport_handler</value></entry>
	                </propertyMap>
	        </action>
	      
	      </event>
		<transition to="end-state1"></transition>
	</node>

	<state name="killOldTimerAndTurnNewOn">
	    <event type="node-enter">
            <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
                <handlerName>deleteNodeTimersHandler</handlerName>
            </action>
        </event>
        <timer duedate='#{date_timeframeDate}'
               transition='invalidate'>
        </timer>
		<transition to="notifyAboutTheTimeframeMet"></transition>
	</state>

	<task-node name="submitAdditionalInformationWithoutRequest">
	   <task name="submitAdditionalInformationWithoutRequestTask" priority="-1">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}},
                           {roleName: "bpm_violationReport_owner", accesses: {access: [read, write]}} 
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
         <controller>
            <variable name="string_additionalInformationRequestText" access="read"></variable>
            <variable name="string_additionalInformation" access="write,required"></variable>
            <variable name="files_additionalAttachments" access="write"></variable>
         </controller>
      </task>
		<transition to="end-state1"></transition>
	</task-node>

	<task-node name="violationReportOnRepeat">
	   <task name="violationReportOnRepeatTask" priority="-1">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>jsonAssignmentHandler</handlerName>
            <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                <entry><key>expression</key>
                    <value>
                        {taskAssignment: {roles: {role: [
                           {roleName: "bpm_violationReport_owner", accesses: {access: [read, write]}},
                           {roleName: "bpm_violationReport_handler", accesses: {access: [read, write]}}
                        ]} }}
                    </value>
                </entry>
            </propertyMap>
         </assignment>
         
         <controller>
            <variable name="string_caseIdentifier" access="read"></variable>
            <variable name="string_caseDescription" access="read,write"></variable>
            
            <variable name="objlist_violationPersons" access="read,write"></variable>
            <variable name="objlist_violationCompanies" access="read,write"></variable>
            
            <variable name="date_violationDate" access="read,write"></variable>
            <variable name="string_violationDateLabel" access="read,write"></variable>
            <variable name="string_violationTime" access="read,write"></variable>
            <variable name="string_violationTimeLabel" access="read,write"></variable>
            <variable name="list_violationTypes" access="read,write"></variable>
            <variable name="string_violationTypesSummary" access="read,write"></variable>
            
            <variable name="string_locationLatitudeDegree" access="read,write"></variable>
            <variable name="string_locationLatitudeMinute" access="read,write"></variable>
            <variable name="string_locationLatitudeSecond" access="read,write"></variable>
            <variable name="string_locationLatitudePole" access="read,write"></variable>
            
            <variable name="string_locationLatitudeLabel" access="read,write"></variable>
            
            <variable name="string_locationLongitudeDegree" access="read,write"></variable>
            <variable name="string_locationLongitudeMinute" access="read,write"></variable>
            <variable name="string_locationLongitudeSecond" access="read,write"></variable>
            <variable name="string_locationLongitudeAngle" access="read,write"></variable>
            
            <variable name="string_locationLongitudeLabel" access="read,write"></variable>
            
            <variable name="string_harbourNr" access="read,write"></variable>
            <variable name="string_harbourLabel" access="read,write"></variable>
            <variable name="string_violationAddress" access="read,write"></variable>
            <variable name="string_violationPostalCode" access="read,write"></variable>
            <variable name="string_violationPlace" access="read,write"></variable>
            <variable name="string_violationUmBorSkipi" access="read,write"></variable>
            <variable name="string_violationUmBorSkipiLabel" access="read,write"></variable>
            <variable name="string_officerComments" access="read,write"></variable>
            
            <variable name="string_vesselRegistryNr" access="read,write"></variable>
            <variable name="string_vesselName" access="read,write"></variable>
            <variable name="string_vesselOwnerName" access="read,write"></variable>
            <variable name="string_vesselFishingType" access="read,write"></variable>
            <variable name="string_vesselFishingLicense" access="read,write"></variable>
            <variable name="string_vesselFishingGear" access="read,write"></variable>
            <variable name="string_vesselFishingGearOther" access="read,write"></variable>
            <variable name="string_vesselFishingGearsSummary" access="read,write"></variable>
            <variable name="string_vesselRevokeLicense" access="read,write"></variable>
            <variable name="string_vesselFisheriesName" access="read,write"></variable>
            
            <variable name="string_policeInvolvement" access="read,write"></variable>
            <variable name="string_policeOfficersNr" access="read,write"></variable>
            <variable name="string_violationDescription" access="read,write"></variable>
            <variable name="files_attachments" access="read,write"></variable>
            <variable name="string_responsibleInspector" access="read,write"></variable>
            <variable name="string_fiskistofaOffice" access="read,write"></variable>
            <variable name="string_fiskistofaOfficeLabel" access="read,write"></variable>
            <variable name="list_otherInspectors" access="read,write"></variable>
            <variable name="string_otherInspectorsSummary" access="read,write"></variable>
            
         </controller>
      </task>
		<transition to="end-state2"></transition>
	</task-node>


	<end-state name="end-state1"></end-state>

	<end-state name="end-process" end-complete-process="true"></end-state>

	<end-state name="end-state2"></end-state>
	
	<idg:roles xmlns:idg="http://idega.com/bpm">
        <role name="bpm_violationReport_caseHandler">
          <labels>
            <label lang="en">caseHandler</label>
            <label lang="is_IS">Ábyrgðaraðili</label>
          </labels>
        </role>
        <role name="bpm_violationReport_handler" createNative="true">
          <labels>
            <label lang="en">handler</label>
            <label lang="is_IS">Ábyrðaraðili</label>
          </labels>
        </role>
        <role name="bpm_violationReport_superHandler" createNative="true">
          <labels>
            <label lang="en">Super Handler</label>
            <label lang="is_IS">Yfir ábyrgðaraðili</label>
          </labels>
        </role>
        <role name="bpm_violationReport_owner">
          <labels>
            <label lang="en">owner</label>
            <label lang="is_IS">Eftirlitsaðili</label>
          </labels>
        </role>
    </idg:roles>
</process-definition>